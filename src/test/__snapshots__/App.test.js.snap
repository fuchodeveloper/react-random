// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<App /> should render App 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <App />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <h1>
          Random phone number generator
        </h1>,
        <p>
          Generate phone numbers: 
          <button
            onClick={[Function]}
          >
            Generate
          </button>
        </p>,
        false,
      ],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": "Random phone number generator",
        },
        "ref": null,
        "rendered": "Random phone number generator",
        "type": "h1",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            "Generate phone numbers: ",
            <button
              onClick={[Function]}
            >
              Generate
            </button>,
          ],
        },
        "ref": null,
        "rendered": Array [
          "Generate phone numbers: ",
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Generate",
              "onClick": [Function],
            },
            "ref": null,
            "rendered": "Generate",
            "type": "button",
          },
        ],
        "type": "p",
      },
      false,
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <h1>
            Random phone number generator
          </h1>,
          <p>
            Generate phone numbers: 
            <button
              onClick={[Function]}
            >
              Generate
            </button>
          </p>,
          false,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "Random phone number generator",
          },
          "ref": null,
          "rendered": "Random phone number generator",
          "type": "h1",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              "Generate phone numbers: ",
              <button
                onClick={[Function]}
              >
                Generate
              </button>,
            ],
          },
          "ref": null,
          "rendered": Array [
            "Generate phone numbers: ",
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Generate",
                "onClick": [Function],
              },
              "ref": null,
              "rendered": "Generate",
              "type": "button",
            },
          ],
          "type": "p",
        },
        false,
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
